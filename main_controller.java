/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.bnson.comrobot;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import static java.lang.Compiler.command;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author bnson
 */
public class main_controller extends javax.swing.JFrame {

    /**
     * Creates new form main_controller
     */
    public main_controller() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        bt_ConvertText2Mp3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        tf_linkStory = new javax.swing.JTextField();
        tf_pathFolder = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Get Story");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        bt_ConvertText2Mp3.setText("Convert Text To Mp3");
        bt_ConvertText2Mp3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_ConvertText2Mp3ActionPerformed(evt);
            }
        });

        jButton2.setText("Convert Mp3 To Mp4");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        tf_linkStory.setText("http://truyenfull.vn/di-the-ta-quan/trang-");

        tf_pathFolder.setText("D:\\working\\story\\Di_The_Ta_Quan");

        jButton3.setText("Get Word From Text");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tf_linkStory)
                    .addComponent(tf_pathFolder)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bt_ConvertText2Mp3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2))
                            .addComponent(jButton3))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(bt_ConvertText2Mp3)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tf_linkStory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tf_pathFolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addContainerGap(174, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        getStory();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void bt_ConvertText2Mp3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_ConvertText2Mp3ActionPerformed
        // TODO add your handling code here:
        convertTextToMp3();
    }//GEN-LAST:event_bt_ConvertText2Mp3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        convertMp3ToMp4();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        getWordFromText("D:\\working\\story\\Di_The_Ta_Quan\\edit\\Dị Thế Tà Quân Chương 1 Tà quân Quân Tà.txt");
        
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main_controller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main_controller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main_controller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main_controller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new main_controller().setVisible(true);
        });
    }

    public void getWordFromText(String pathFile) {
        String folderDictVN = "D:\\project\\DictVN\\singleWord";

        String content = uff.readFileToString(pathFile);
        String[] words = content.toLowerCase().replaceAll("[`\\-=\\[\\];',./~!@#$%^&*()_={}\\\\:\\\"…><?]", "").split("\\s+");
        String[] wordsNoDub  = new HashSet<>(Arrays.asList(words)).toArray(new String[0]);
        
        
        for (String word : wordsNoDub) {
            System.out.println("word: " + word);
            
            String[] alphabets = "abcdefghijklmnopqrstuvwxyz".split("");
            
            boolean flag = false;
            for (String alphabet : alphabets) {
                if (us.unAccent(word.substring(0, 1)).equals(alphabet)) {
                    uff.wirteFileAppend(word, folderDictVN, alphabet + ".txt");
                    flag = true;
                }
            }
            
            if (!flag) {
                uff.wirteFileAppend(word, folderDictVN, "_other.txt");
            }
            
            

            
        }


    }
    
    public void getStory() {
        download_WebContent dwc = new download_WebContent();
        dwc.download_TruyenFull(tf_linkStory.getText(), tf_pathFolder.getText());
    }
    
    public void convertTextToMp3() {
        try {
            String balabolka = "\"C:\\Program Files (x86)\\Balabolka\\balabolka.exe\" -msq ";
            String textFolderPath = tf_pathFolder.getText() + "\\edit";
            String mp3FolderPath = tf_pathFolder.getText() + "\\mp3";
            String textPath;
            String mp3Path;
            String command;

            uff.createFolder(mp3FolderPath);
            
            ArrayList<String> alListText = uff.getNameOfFilesInFolder(textFolderPath);
            ArrayList<String> alListMp3 = uff.getNameOfFilesInFolder(mp3FolderPath);
            //ual.printArrayListString(alListText);

            boolean flag;
            for (int i = 0; i < alListText.size(); i++) {
                flag = true;
                for (String tmp : alListMp3) {
                    if (alListText.get(i).replace(".txt", ".mp3").equals(tmp)) {
                        flag = false;
                    }
                }

                if (flag) {
                    textPath = textFolderPath + "\\" + alListText.get(i);
                    mp3Path = mp3FolderPath + "\\" + alListText.get(i).replace(".txt", ".mp3");

                    command = "cmd /c start chcp 65001 & " + balabolka + "\"" + textPath + "\" \"" + mp3Path + "\"";
                    System.out.println("runCMD: " + command);

                    Runtime rt = Runtime.getRuntime();
                    //Process pr = rt.exec("cmd /c dir");
                    Process pr = rt.exec(command);

                    BufferedReader input = new BufferedReader(new InputStreamReader(pr.getInputStream()));

                    String line;

                    while ((line = input.readLine()) != null) {
                        System.out.println(line);
                    }

                    int exitVal = pr.waitFor();
                    System.out.println("Exited with error code " + exitVal);
                }
            }

        } catch (IOException e) {

        } catch (InterruptedException ex) {
            Logger.getLogger(main_controller.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void convertMp3ToMp4() {
        try {
            String ffmpeg = "D:\\project\\comRobot\\src\\exApp\\ffmpeg"; 
            String ffmpeg01 = "-r 1 -loop 1 -i";
            String ffmpeg02 = " -acodec copy -r 1 -shortest -vf scale=1280:720 "; 
            String coverImage = tf_pathFolder.getText() + "\\COVER.png";
            String mp3FolderPath = tf_pathFolder.getText() + "\\mp3";
            String mp4FolderPath = tf_pathFolder.getText() + "\\mp4";
            String mp3Path;
            String mp4Path;
            String command;
            
            uff.createFolder(mp4FolderPath);
            
            ArrayList<String> alListText = uff.getNameOfFilesInFolder(mp3FolderPath);
            ArrayList<String> alListMp3 = uff.getNameOfFilesInFolder(mp4FolderPath);
            //ual.printArrayListString(alListText);

            boolean flag;
            for (int i = 0; i < alListText.size(); i++) {
                flag = true;
                for (String tmp : alListMp3) {
                    if (alListText.get(i).replace(".mp3", ".mp4").equals(tmp)) {
                        flag = false;
                    }
                }

                if (flag) {
                    mp3Path = mp3FolderPath + "\\" + alListText.get(i);
                    mp4Path = mp4FolderPath + "\\" + alListText.get(i).replace(".mp3", ".mp4");

                    command = "cmd /c start chcp 65001 & " + ffmpeg + coverImage + " -i \"" + mp3Path + "\"" + ffmpeg01 + "\"" + mp4Path + "\"";
                    //System.out.println("runCMD: " + command);

                    ProcessBuilder process = new ProcessBuilder(ffmpeg,"-r","1","-loop","1","-i",coverImage,"-i",mp3Path,"-acodec","copy","-r","1","-shortest","-vf","scale=1280:720",mp4Path);
                    process.redirectErrorStream(true);
                    System.out.println("process: " + process.command());
                    Process p = process.start();

                    BufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()));

                    String line;

                    while ((line = br.readLine()) != null) {

                        //System.out.println("---------" + line);
                    }
                    System.out.println("----wait over--- " + p.waitFor()); 
                }
            }

        } catch (IOException e) {

        } catch (InterruptedException ex) {
            Logger.getLogger(main_controller.class.getName()).log(Level.SEVERE, null, ex);
        }        
        
        
    }
    
    utility_FileFolder uff = new utility_FileFolder();
    utility_ArrayList ual = new utility_ArrayList();
    utility_String us = new utility_String();

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_ConvertText2Mp3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JTextField tf_linkStory;
    private javax.swing.JTextField tf_pathFolder;
    // End of variables declaration//GEN-END:variables
}
